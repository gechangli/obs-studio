; Script generated by the Inno Script Studio Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "XiaomeiLive"
#define MyAppNameLowerCase LowerCase(MyAppName)
#define MyAppVersion "0.0.1"
#define MyAppPublisher "JRU tech, Inc."
#define MyAppLauncherName "xiaomeilive64.exe"
#define AppReleaseZip "xiaomeilive-release-x64.zip"
#define Deflater "7za.exe"
#define IngoreFiles ".idea,.gitignore"
#define VCRedistFile "vc_redist.x64.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application.
; Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{DFC55E28-C3F6-4DCF-AC27-792BC467D693}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
AppPublisher={#MyAppPublisher}
DefaultDirName={pf}\{#MyAppName}
DefaultGroupName={#MyAppName}
AllowNoIcons=yes
OutputBaseFilename={#MyAppName}-{#MyAppVersion}-x64-setup
Compression=lzma
SolidCompression=yes
ChangesEnvironment=yes
SetupIconFile=components/icon_128.ico

[Languages]
Name: "English"; MessagesFile: "compiler:Default.isl"

[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "quicklaunchicon"; Description: "{cm:CreateQuickLaunchIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked; OnlyBelowVersion: 0,6.1

[Files]
Source: "{#Deflater}"; DestDir: "{app}"; Flags: ignoreversion deleteafterinstall
Source: "components\{#AppReleaseZip}"; DestDir: "{app}"; Flags: ignoreversion deleteafterinstall; AfterInstall: Unzip('{app}\{#AppReleaseZip}', '{app}')
Source: "components/{#VCRedistFile}"; DestDir: "{tmp}"; Flags: ignoreversion deleteafterinstall; Check: not IsVCinstalled; AfterInstall: Install('{tmp}/{#VCRedistFile}') 

[Icons]
Name: "{group}\{#MyAppName}"; Filename: "{app}\bin\64bit\{#MyAppLauncherName}"
Name: "{commondesktop}\{#MyAppName}"; Filename: "{app}\bin\64bit\{#MyAppLauncherName}"; Tasks: desktopicon
Name: "{userappdata}\Microsoft\Internet Explorer\Quick Launch\{#MyAppName}"; Filename: "{app}\bin\64bit\{#MyAppLauncherName}"; Tasks: quicklaunchicon

[Dirs]
Name: "{app}"; Permissions: users-modify

[Code]
function IsVCinstalled: Boolean;
// By Michael Weiner <mailto:spam@cogit.net>
// Function for Inno Setup Compiler
// 13 November 2015
// Returns True if Microsoft Visual C++ Redistributable is installed, otherwise False.
// The programmer may set the year of redistributable to find; see below.
var
  names: TArrayOfString;
  i, k, RootKey: Integer;
  dName, key, year: String;
begin
  // get root key
  if IsWin64 then begin
    RootKey := HKLM64;
  end else
    RootKey := HKLM32;

  // Year of redistributable to find; leave null to find installation for any year.
  Result := False;
  key := 'Software\Microsoft\Windows\CurrentVersion\Uninstall';

  // Get an array of all of the uninstall subkey names.
  if RegGetSubkeyNames(RootKey, key, names) then
  begin
    i := 0
    while ((i < GetArrayLength(names)) and (Result = False)) do
    begin
      // For each uninstall subkey, look for a DisplayName value.
      // If not found, then the subkey name will be used instead.
      if not RegQueryStringValue(RootKey, key + '\' + names[i], 'DisplayName', dName) then
        dName := names[i];

      // See if the value contains both of the strings below.
      k := Pos('Visual C++ ', dName);
      if k <> 0 then
      begin
        year := Copy(dName, k + 11, 4);
        if CompareStr(year, '2015') >= 0 then
          Result := True
      end;
      i := i + 1;
    end;
  end;
end;

procedure Unzip(src, target : String);
var
  ResultCode : Integer;
  Params : String;
begin
  Params := 'x -r -aoa -o"' + ExpandConstant(target) + '" "' + ExpandConstant(src) + '"';
  Exec(ExpandConstant('{app}\{#Deflater}'), Params, ExpandConstant('{app}'), SW_SHOW, ewWaitUntilTerminated, ResultCode);
end;

procedure Install(Path : String);
var
  ErrorCode : Integer;
begin
  ShellExec('open', ExpandConstant(Path), '', '', SW_SHOW, ewWaitUntilTerminated, ErrorCode);
end;